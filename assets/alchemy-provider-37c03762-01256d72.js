import{aa as D,a0 as T,T as O,V as P,ab as F,ac as w,ad as M,a8 as _,Q as d,ae as k,af as m,a9 as B,ag as G,ah as L}from"./app-0b588ede.js";import"./index-d08623ec.js";const W="logger/5.7.0";let U=!1,S=!1;const N={debug:1,default:2,info:2,warning:3,error:4,off:5};let g=N.default,I=null;function q(){try{const r=[];if(["NFD","NFC","NFKD","NFKC"].forEach(e=>{try{if("test".normalize(e)!=="test")throw new Error("bad normalize")}catch{r.push(e)}}),r.length)throw new Error("missing "+r.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(r){return r.message}return null}const y=q();var A;(function(r){r.DEBUG="DEBUG",r.INFO="INFO",r.WARNING="WARNING",r.ERROR="ERROR",r.OFF="OFF"})(A||(A={}));var l;(function(r){r.UNKNOWN_ERROR="UNKNOWN_ERROR",r.NOT_IMPLEMENTED="NOT_IMPLEMENTED",r.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",r.NETWORK_ERROR="NETWORK_ERROR",r.SERVER_ERROR="SERVER_ERROR",r.TIMEOUT="TIMEOUT",r.BUFFER_OVERRUN="BUFFER_OVERRUN",r.NUMERIC_FAULT="NUMERIC_FAULT",r.MISSING_NEW="MISSING_NEW",r.INVALID_ARGUMENT="INVALID_ARGUMENT",r.MISSING_ARGUMENT="MISSING_ARGUMENT",r.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",r.CALL_EXCEPTION="CALL_EXCEPTION",r.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",r.NONCE_EXPIRED="NONCE_EXPIRED",r.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",r.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",r.TRANSACTION_REPLACED="TRANSACTION_REPLACED",r.ACTION_REJECTED="ACTION_REJECTED"})(l||(l={}));const b="0123456789abcdef";class i{constructor(e){Object.defineProperty(this,"version",{enumerable:!0,value:e,writable:!1})}_log(e,t){const n=e.toLowerCase();N[n]==null&&this.throwArgumentError("invalid log level name","logLevel",e),!(g>N[n])&&console.log.apply(console,t)}debug(...e){this._log(i.levels.DEBUG,e)}info(...e){this._log(i.levels.INFO,e)}warn(...e){this._log(i.levels.WARNING,e)}makeError(e,t,n){if(S)return this.makeError("censored error",t,{});t||(t=i.errors.UNKNOWN_ERROR),n||(n={});const s=[];Object.keys(n).forEach(a=>{const u=n[a];try{if(u instanceof Uint8Array){let E="";for(let f=0;f<u.length;f++)E+=b[u[f]>>4],E+=b[u[f]&15];s.push(a+"=Uint8Array(0x"+E+")")}else s.push(a+"="+JSON.stringify(u))}catch{s.push(a+"="+JSON.stringify(n[a].toString()))}}),s.push(`code=${t}`),s.push(`version=${this.version}`);const c=e;let o="";switch(t){case l.NUMERIC_FAULT:{o="NUMERIC_FAULT";const a=e;switch(a){case"overflow":case"underflow":case"division-by-zero":o+="-"+a;break;case"negative-power":case"negative-width":o+="-unsupported";break;case"unbound-bitwise-result":o+="-unbound-result";break}break}case l.CALL_EXCEPTION:case l.INSUFFICIENT_FUNDS:case l.MISSING_NEW:case l.NONCE_EXPIRED:case l.REPLACEMENT_UNDERPRICED:case l.TRANSACTION_REPLACED:case l.UNPREDICTABLE_GAS_LIMIT:o=t;break}o&&(e+=" [ See: https://links.ethers.org/v5-errors-"+o+" ]"),s.length&&(e+=" ("+s.join(", ")+")");const h=new Error(e);return h.reason=c,h.code=t,Object.keys(n).forEach(function(a){h[a]=n[a]}),h}throwError(e,t,n){throw this.makeError(e,t,n)}throwArgumentError(e,t,n){return this.throwError(e,i.errors.INVALID_ARGUMENT,{argument:t,value:n})}assert(e,t,n,s){e||this.throwError(t,n,s)}assertArgument(e,t,n,s){e||this.throwArgumentError(t,n,s)}checkNormalize(e){y&&this.throwError("platform missing String.prototype.normalize",i.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:y})}checkSafeUint53(e,t){typeof e=="number"&&(t==null&&(t="value not safe"),(e<0||e>=9007199254740991)&&this.throwError(t,i.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:e}),e%1&&this.throwError(t,i.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:e}))}checkArgumentCount(e,t,n){n?n=": "+n:n="",e<t&&this.throwError("missing argument"+n,i.errors.MISSING_ARGUMENT,{count:e,expectedCount:t}),e>t&&this.throwError("too many arguments"+n,i.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:t})}checkNew(e,t){(e===Object||e==null)&&this.throwError("missing new",i.errors.MISSING_NEW,{name:t.name})}checkAbstract(e,t){e===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",i.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:"new"}):(e===Object||e==null)&&this.throwError("missing new",i.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return I||(I=new i(W)),I}static setCensorship(e,t){if(!e&&t&&this.globalLogger().throwError("cannot permanently disable censorship",i.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),U){if(!e)return;this.globalLogger().throwError("error censorship permanent",i.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}S=!!e,U=!!t}static setLogLevel(e){const t=N[e.toLowerCase()];if(t==null){i.globalLogger().warn("invalid log level - "+e);return}g=t}static from(e){return new i(e)}}i.errors=l;i.levels=A;const z="properties/5.7.0",C=new i(z);function x(r,e,t){Object.defineProperty(r,e,{enumerable:!0,value:t,writable:!1})}const K={bigint:!0,boolean:!0,function:!0,number:!0,string:!0};function v(r){if(r==null||K[typeof r])return!0;if(Array.isArray(r)||typeof r=="object"){if(!Object.isFrozen(r))return!1;const e=Object.keys(r);for(let t=0;t<e.length;t++){let n=null;try{n=r[e[t]]}catch{continue}if(!v(n))return!1}return!0}return C.throwArgumentError(`Cannot deepCopy ${typeof r}`,"object",r)}function V(r){if(v(r))return r;if(Array.isArray(r))return Object.freeze(r.map(e=>p(e)));if(typeof r=="object"){const e={};for(const t in r){const n=r[t];n!==void 0&&x(e,t,p(n))}return e}return C.throwArgumentError(`Cannot deepCopy ${typeof r}`,"object",r)}function p(r){return V(r)}const X=100,j=10;class J{constructor(e,t=X){this.sendBatchFn=e,this.maxBatchSize=t,this.pendingBatch=[]}enqueueRequest(e){return d(this,void 0,void 0,function*(){const t={request:e,resolve:void 0,reject:void 0},n=new Promise((s,c)=>{t.resolve=s,t.reject=c});return this.pendingBatch.push(t),this.pendingBatch.length===this.maxBatchSize?this.sendBatchRequest():this.pendingBatchTimer||(this.pendingBatchTimer=setTimeout(()=>this.sendBatchRequest(),j)),n})}sendBatchRequest(){return d(this,void 0,void 0,function*(){const e=this.pendingBatch;this.pendingBatch=[],this.pendingBatchTimer&&(clearTimeout(this.pendingBatchTimer),this.pendingBatchTimer=void 0);const t=e.map(n=>n.request);return this.sendBatchFn(t).then(n=>{e.forEach((s,c)=>{const o=n[c];if(o.error){const h=new Error(o.error.message);h.code=o.error.code,h.data=o.error.data,s.reject(h)}else s.resolve(o.result)})},n=>{e.forEach(s=>{s.reject(n)})})})}}class R extends D{constructor(e){const t=R.getApiKey(e.apiKey),n=R.getAlchemyNetwork(e.network),s=R.getAlchemyConnectionInfo(n,t,"http");e.url!==void 0&&(s.url=e.url),s.throttleLimit=e.maxRetries;const c=B[n];super(s,c),this.apiKey=e.apiKey,this.maxRetries=e.maxRetries,this.batchRequests=e.batchRequests;const o=Object.assign({},this.connection);o.headers["Alchemy-Ethers-Sdk-Method"]="batchSend";const h=a=>m(o,JSON.stringify(a));this.batcher=new J(h)}static getApiKey(e){if(e==null)return T;if(e&&typeof e!="string")throw new Error(`Invalid apiKey '${e}' provided. apiKey must be a string.`);return e}static getNetwork(e){return typeof e=="string"&&e in O?O[e]:P(e)}static getAlchemyNetwork(e){if(e===void 0)return F;if(typeof e=="number")throw new Error(`Invalid network '${e}' provided. Network must be a string.`);if(!Object.values(w).includes(e))throw new Error(`Invalid network '${e}' provided. Network must be one of: ${Object.values(w).join(", ")}.`);return e}static getAlchemyConnectionInfo(e,t,n){const s=n==="http"?G(e,t):L(e,t);return{headers:M?{"Alchemy-Ethers-Sdk-Version":_}:{"Alchemy-Ethers-Sdk-Version":_,"Accept-Encoding":"gzip"},allowGzip:!0,url:s}}detectNetwork(){const e=Object.create(null,{detectNetwork:{get:()=>super.detectNetwork}});return d(this,void 0,void 0,function*(){let t=this.network;if(t==null&&(t=yield e.detectNetwork.call(this),!t))throw new Error("No network detected");return t})}_startPending(){k("WARNING: Alchemy Provider does not support pending filters")}isCommunityResource(){return this.apiKey===T}send(e,t){return this._send(e,t,"send")}_send(e,t,n,s=!1){const c={method:e,params:t,id:this._nextId++,jsonrpc:"2.0"},o=Object.assign({},this.connection);if(o.headers["Alchemy-Ethers-Sdk-Method"]=n,this.batchRequests||s)return this.batcher.enqueueRequest(c);this.emit("debug",{action:"request",request:p(c),provider:this});const h=["eth_chainId","eth_blockNumber"].indexOf(e)>=0;if(h&&this._cache[e])return this._cache[e];const a=m(this.connection,JSON.stringify(c),$).then(u=>(this.emit("debug",{action:"response",request:c,response:u,provider:this}),u),u=>{throw this.emit("debug",{action:"response",error:u,request:c,provider:this}),u});return h&&(this._cache[e]=a,setTimeout(()=>{this._cache[e]=null},0)),a}}function $(r){if(r.error){const e=new Error(r.error.message);throw e.code=r.error.code,e.data=r.error.data,e}return r.result}export{R as AlchemyProvider};
